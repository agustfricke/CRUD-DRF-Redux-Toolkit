{"ast":null,"code":"var _jsxFileName = \"/home/agust/Projects/curso-redux/src/components/EditBlogForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteBlog, selectBlogById, updateBlog } from \"../features/blogsSlice\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditBlogForm = () => {\n  _s();\n  const {\n    blogId\n  } = useParams();\n  const navigate = useNavigate();\n  const blog = useSelector(state => selectBlogById(state, Number(blogId)));\n  const [body, setBody] = useState(blog === null || blog === void 0 ? void 0 : blog.body);\n  const [requestStatus, setRequestStatus] = useState('idle');\n  const dispatch = useDispatch();\n  if (!blog) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No Blogs!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n  const handleSave = () => {\n    if (Boolean(body) && requestStatus === 'idle') {\n      try {\n        setRequestStatus('pending');\n        dispatch(updateBlog({\n          id: blog.id,\n          body\n        }));\n        setBody('');\n        navigate('/');\n      } catch (err) {\n        console.log('Faild to save the blog', err);\n      } finally {\n        setRequestStatus('idle');\n      }\n    }\n  };\n  const deleteHandler = () => {\n    try {\n      setRequestStatus('pending');\n      dispatch(deleteBlog({\n        id: blog.id\n      })).unwrap();\n      setBody('');\n      navigate('/');\n    } catch (err) {\n      console.log('Faild to delete blog', err);\n    } finally {\n      setRequestStatus('idle');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"rounded-lg p-2 m-2\",\n        type: \"text\",\n        placeholder: \"Title\",\n        value: body,\n        onChange: e => setBody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        className: \"bg-white text-black p-2 rounded-lg\",\n        type: \"button\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteHandler,\n        className: \"bg-white text-black p-2 rounded-lg\",\n        type: \"button\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(EditBlogForm, \"ymKeUIXPLOW5u7Xnoo02277clFA=\", false, function () {\n  return [useParams, useNavigate, useSelector, useDispatch];\n});\n_c = EditBlogForm;\nexport default EditBlogForm;\nvar _c;\n$RefreshReg$(_c, \"EditBlogForm\");","map":{"version":3,"names":["useState","useDispatch","useSelector","deleteBlog","selectBlogById","updateBlog","useParams","useNavigate","EditBlogForm","blogId","navigate","blog","state","Number","body","setBody","requestStatus","setRequestStatus","dispatch","handleSave","Boolean","id","err","console","log","deleteHandler","unwrap","e","target","value"],"sources":["/home/agust/Projects/curso-redux/src/components/EditBlogForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteBlog, selectBlogById, updateBlog } from \"../features/blogsSlice\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nconst EditBlogForm = () => {\n\n    const { blogId } = useParams();\n\n    const navigate = useNavigate();\n\n    const blog = useSelector((state) => selectBlogById(state, Number(blogId)));\n\n    const [body, setBody] = useState(blog?.body);\n    const [requestStatus, setRequestStatus] = useState('idle');\n\n    const dispatch = useDispatch();\n\n    if (!blog) {\n        return (\n            <h1>No Blogs!</h1>\n        )\n    }\n\n    const handleSave = () => {\n        if (Boolean(body) && requestStatus === 'idle') {\n            try {\n                setRequestStatus('pending')\n                dispatch(updateBlog({ id: blog.id, body }))\n\n                    setBody('');\n                    navigate('/')\n            } catch (err) {\n                console.log('Faild to save the blog', err)\n            } finally {\n                setRequestStatus('idle')\n            }\n        }\n    }\n\n    const deleteHandler = () => {\n        try {\n            setRequestStatus('pending')\n            dispatch(deleteBlog({ id: blog.id })).unwrap()\n\n            setBody('')\n            navigate('/')\n        } catch (err) {\n            console.log('Faild to delete blog', err)\n        } finally {\n            setRequestStatus('idle')\n        }\n    }\n    return (\n        <div className=\"flex justify-center\">\n            <form className=\"mt-3\">\n                <input\n                className=\"rounded-lg p-2 m-2\"\n                type='text'\n                placeholder=\"Title\"\n                value={body}\n                onChange={(e) => setBody(e.target.value)}/>\n                <button \n                onClick={handleSave}\n                className=\"bg-white text-black p-2 rounded-lg\"\n                type=\"button\">Create</button>\n                <button \n                onClick={deleteHandler}\n                className=\"bg-white text-black p-2 rounded-lg\"\n                type=\"button\">Delete</button>\n            </form>\n        </div>\n    )\n};\n\nexport default EditBlogForm;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}