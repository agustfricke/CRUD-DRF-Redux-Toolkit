{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst URL = 'http://127.0.0.1:8000/api/blogs';\nconst initialState = {\n  blogs: [],\n  status: 'idle',\n  // idle, loading, success, fail\n  error: null\n};\nexport const fetchBlogs = createAsyncThunk('blogs/fetchBlogs', async () => {\n  const response = await axios.get(`${URL}/`);\n  return response.data;\n});\nexport const addNewBlog = createAsyncThunk('blogs/addNewBlog', async initialBlog => {\n  const response = await axios.post(`${URL}/`, initialBlog);\n  return response.data;\n});\nexport const updateBlog = createAsyncThunk('blogs/updateBlog', async initialBlog => {\n  const {\n    id\n  } = initialBlog;\n  try {\n    const response = await axios.put(`${URL}/${id}/`, initialBlog);\n    return response.data;\n  } catch (err) {\n    return err.message;\n  }\n});\nexport const deleteBlog = createAsyncThunk('blogs/deleteBlog', async initialBlog => {\n  const {\n    id\n  } = initialBlog;\n  try {\n    const response = await axios.delete(`${URL}/${id}/`, initialBlog);\n    return response;\n  } catch (err) {\n    return err.message;\n  }\n});\nconst blogsSlice = createSlice({\n  name: 'blogs',\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder.addCase(fetchBlogs.pending, (state, action) => {\n      state.status = 'loading';\n    }).addCase(fetchBlogs.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.blogs = state.blogs.concat(action.payload);\n    }).addCase(fetchBlogs.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(addNewBlog.fulfilled, (state, action) => {\n      state.blogs.push(action.payload);\n    }).addCase(updateBlog.fulfilled, (state, action) => {\n      var _action$payload;\n      if (!((_action$payload = action.payload) !== null && _action$payload !== void 0 && _action$payload.id)) {\n        console.log('Update cant be completed!');\n        console.log(action.payload);\n        return;\n      }\n      const {\n        id\n      } = action.payload;\n      const blogs = state.blogs.filter(blog => blog.id !== id);\n      state.blogs = [...blogs, action.payload];\n    }).addCase(deleteBlog.fulfilled, (state, action) => {\n      const {\n        id\n      } = action.payload;\n      const blogs = state.blogs.filter(blog => blog.id !== id);\n      state.blogs = blogs;\n    });\n  }\n});\nexport const selectAllBlogs = state => state.blogs.blogs;\nexport const getBlogsStatus = state => state.blogs.status;\nexport const getBlogError = state => state.blogs.error;\n\n// Get the id of the blogs \nexport const selectBlogById = (state, blogId) => state.blogs.blogs.find(blog => blog.id === blogId);\nexport default blogsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","URL","initialState","blogs","status","error","fetchBlogs","response","get","data","addNewBlog","initialBlog","post","updateBlog","id","put","err","message","deleteBlog","delete","blogsSlice","name","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","concat","payload","rejected","push","console","log","filter","blog","selectAllBlogs","getBlogsStatus","getBlogError","selectBlogById","blogId","find","reducer"],"sources":["/home/agust/Projects/curso-redux/src/features/blogsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst URL = 'http://127.0.0.1:8000/api/blogs'\n\n\nconst initialState = {\n    blogs: [],\n    status: 'idle', // idle, loading, success, fail\n    error: null\n}\n\nexport const fetchBlogs = createAsyncThunk('blogs/fetchBlogs', async () => {\n    const response = await axios.get(`${URL}/`)\n    return response.data\n})\n\nexport const addNewBlog = createAsyncThunk('blogs/addNewBlog', async (initialBlog) => {\n    const response = await axios.post(`${URL}/`, initialBlog)\n    return response.data\n})\n\nexport const updateBlog = createAsyncThunk('blogs/updateBlog', async (initialBlog) => {\n    const { id } = initialBlog;\n    try {\n        const response = await axios.put(`${URL}/${id}/`, initialBlog)\n        return response.data\n    } catch (err) {\n        return err.message;\n    }\n})\n\nexport const deleteBlog = createAsyncThunk('blogs/deleteBlog', async (initialBlog) => {\n    const { id } = initialBlog;\n    try {\n        const response = await axios.delete(`${URL}/${id}/`,initialBlog)\n        return response\n    } catch (err) {\n        return err.message\n    }\n})\n\nconst blogsSlice = createSlice({\n    name: 'blogs',\n    initialState,\n    reducers: {},\n    extraReducers(builder) {\n        builder\n        .addCase(fetchBlogs.pending, (state, action) => {\n            state.status = 'loading'\n        })\n        .addCase(fetchBlogs.fulfilled, (state, action) => {\n            state.status = 'succeeded'\n            state.blogs = state.blogs.concat(action.payload)\n        })\n        .addCase(fetchBlogs.rejected, (state, action) => {\n            state.status = 'failed'\n            state.error = action.error.message\n        })\n        .addCase(addNewBlog.fulfilled, (state, action) => {\n            state.blogs.push(action.payload)\n        })\n        .addCase(updateBlog.fulfilled, (state, action) => {\n            if (!action.payload?.id) {\n                console.log('Update cant be completed!')\n                console.log(action.payload)\n                return;\n            }\n            const { id } = action.payload;\n            const blogs = state.blogs.filter(blog => blog.id !== id);\n            state.blogs = [...blogs, action.payload];\n        })\n        .addCase(deleteBlog.fulfilled, (state, action) => {\n            const { id } = action.payload;\n            const blogs = state.blogs.filter(blog => blog.id !== id);\n            state.blogs = blogs;\n        })\n    }\n})\n\nexport const selectAllBlogs = (state) => state.blogs.blogs;\nexport const getBlogsStatus = (state) => state.blogs.status;\nexport const getBlogError = (state) => state.blogs.error;\n\n// Get the id of the blogs \nexport const selectBlogById = (state, blogId) => \n    state.blogs.blogs.find(blog => blog.id === blogId);\n\n\nexport default blogsSlice.reducer;\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}