{"ast":null,"code":"var _jsxFileName = \"/home/agust/GitHub/CRUD-DRF-Redux-Toolkit/frontend/src/components/EditPost.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { selectPostById } from \"../features/postsSlice\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useUpdatePostMutation } from \"../features/postsSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AiFillPlusSquare } from \"react-icons/ai\";\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPost = () => {\n  _s();\n  const {\n    postId\n  } = useParams();\n  const navigate = useNavigate();\n  const [updatePost, {\n    isLoading\n  }] = useUpdatePostMutation();\n  const success = () => toast.success('Post updated!');\n  const error = err => toast.error(err);\n  const post = useSelector(state => selectPostById(state, Number(postId)));\n  const [body, setBody] = useState(post === null || post === void 0 ? void 0 : post.body);\n  const canSave = Boolean(body) && !isLoading;\n  const onSavePost = async () => {\n    if (canSave) {\n      try {\n        await updatePost({\n          id: post.id,\n          body\n        }).unwrap();\n        setBody('');\n        navigate('/');\n        success();\n      } catch (err) {\n        error(err.error);\n      }\n    }\n  };\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-mono text-rojo\",\n        children: \"No post here!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"flex justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: body,\n      className: \"rounded-lg p-1.5 m-5\",\n      onChange: e => setBody(e.target.value),\n      placeholder: \"Update Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"text-white\",\n      onClick: onSavePost,\n      children: /*#__PURE__*/_jsxDEV(AiFillPlusSquare, {\n        size: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 79\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(EditPost, \"xRCCfdZzPdqm/4FnmlEkPrUWzy0=\", false, function () {\n  return [useParams, useNavigate, useUpdatePostMutation, useSelector];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["useState","selectPostById","useParams","useNavigate","useUpdatePostMutation","useSelector","AiFillPlusSquare","toast","jsxDEV","_jsxDEV","EditPost","_s","postId","navigate","updatePost","isLoading","success","error","err","post","state","Number","body","setBody","canSave","Boolean","onSavePost","id","unwrap","children","className","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","type","onClick","size","_c","$RefreshReg$"],"sources":["/home/agust/GitHub/CRUD-DRF-Redux-Toolkit/frontend/src/components/EditPost.js"],"sourcesContent":["import { useState } from \"react\";\nimport { selectPostById } from \"../features/postsSlice\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useUpdatePostMutation } from \"../features/postsSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AiFillPlusSquare } from \"react-icons/ai\";\nimport toast from 'react-hot-toast';\n\nconst EditPost = () => {\n\n    const { postId } = useParams()\n\n    const navigate = useNavigate()\n\n    const [updatePost, {isLoading}] = useUpdatePostMutation();\n\n    const success= () => toast.success('Post updated!');\n    const error= (err) => toast.error(err);\n\n    const post = useSelector((state) => selectPostById(state, Number(postId)))\n\n    const [body, setBody] = useState(post?.body)\n    \n    const canSave = Boolean(body) && !isLoading\n\n    const onSavePost = async () => {\n        if (canSave) {\n            try {\n                await updatePost({ id: post.id, body }).unwrap()\n                setBody('')\n                navigate('/')\n                success()\n            } catch (err) {\n                error(err.error)\n            }\n        }\n    }\n\n    \n    if (!post) {\n        return (\n        <div>\n            <p className=\"font-mono text-rojo\">No post here!</p>\n        </div>\n        )\n    }\n\n    return (\n\n        <form className='flex justify-center'>\n            <input value={body} className='rounded-lg p-1.5 m-5' onChange={(e) => setBody(e.target.value)} placeholder=\"Update Post\"/>\n            <button type='button' className='text-white' onClick={onSavePost}><AiFillPlusSquare size={30}/></button>\n        </form>\n    )\n}\nexport default EditPost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}